// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/xhpolaris/opeanapi-user/biz/adaptor"
	"github.com/xhpolaris/opeanapi-user/biz/adaptor/controller"
	"github.com/xhpolaris/opeanapi-user/biz/application/service"
	"github.com/xhpolaris/opeanapi-user/biz/infrastructure/config"
	"github.com/xhpolaris/opeanapi-user/biz/infrastructure/mapper/key"
	"github.com/xhpolaris/opeanapi-user/biz/infrastructure/mapper/user"
)

// Injectors from wire.go:

func NewProvider() (*adaptor.UserServer, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	mongoMapper := key.NewMongoMapper(configConfig)
	keyService := &service.KeyService{
		KeyMongoMapper: mongoMapper,
	}
	userMongoMapper := user.NewMongoMapper(configConfig)
	userService := &service.UserService{
		UserMongoMapper: userMongoMapper,
	}
	authController := &controller.AuthController{
		KeyService:  keyService,
		UserService: userService,
	}
	moneyService := &service.MoneyService{
		UserMongoMapper: userMongoMapper,
	}
	moneyController := &controller.MoneyController{
		MoneyService: moneyService,
	}
	userServer := &adaptor.UserServer{
		IAuthController:  authController,
		IMoneyController: moneyController,
	}
	return userServer, nil
}
